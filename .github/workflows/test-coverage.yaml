# 📄 Datei: test-coverage.yaml
# 🔧 Zweck: GitHub Actions Workflow für Testabdeckung
# 👤 Autor: MINT-RESEARCH
# 📅 Erstellt: 2025-04-13
# 📘 Gültigkeit: required
# 🧱 Version: 1.0.0
# HINWEIS (MCP): Dieser Workflow führt Tests aus und generiert Testabdeckungsberichte
# HINWEIS (MCP): für das MCP-Projekt. Er ist Teil der kontinuierlichen Compliance-Anforderungen.

name: Test Coverage

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-coverage:
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v3
      
      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      
      - name: 📦 Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest coverage
          # Install project dependencies
          if [ -f pyproject.toml ]; then
            pip install -e .
          else
            pip install pyyaml docker docker-compose
          fi
      
      - name: 🧪 Run tests with coverage
        run: |
          python -m coverage run --source=mcp_units -m pytest tests/
      
      - name: 📊 Generate coverage report
        run: |
          python -m coverage report -m
          python -m coverage xml -o coverage.xml
      
      - name: 📈 Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: false
      
      - name: 📋 Generate HTML coverage report
        run: |
          python -m coverage html --directory=coverage_html
      
      - name: 📤 Upload coverage report as artifact
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: |
            coverage_html/
            coverage.xml
          retention-days: 14
      
      - name: 🔍 Check coverage threshold
        run: |
          # Extract coverage percentage
          COVERAGE=$(python -m coverage report | grep TOTAL | awk '{print $NF}' | sed 's/%//')
          echo "Total coverage: $COVERAGE%"
          
          # Set minimum threshold (can be adjusted as coverage improves)
          THRESHOLD=50
          
          if (( $(echo "$COVERAGE < $THRESHOLD" | bc -l) )); then
            echo "⚠️ Warning: Coverage is below the minimum threshold of $THRESHOLD%"
            echo "Consider adding more tests to improve coverage."
            # Uncomment the following line to fail the build if coverage is too low
            # exit 1
          else
            echo "✅ Coverage meets the minimum threshold of $THRESHOLD%"
          fi